					## STRING METHODS IN MYSQL ###


-- CREATING SAMPLE DATABASE TO USE
CREATE DATABASE MY_INFO;

USE MY_INFO;

-- CREATE SAMPLE TABLE IN DATABASE
CREATE TABLE PERSONAL_INFO (
NAME VARCHAR(20),
AGE INT,
MOBILE_NUMBER BIGINT,
EMAIL VARCHAR(50),
CITY VARCHAR(20),
STATE VARCHAR(20),
COUNTRY VARCHAR(20)
);

-- INSERTING VALUES IN TABLE
INSERT INTO PERSONAL_INFO
VALUES("SURAJ", 27, 8722245836, "SURAJH8596@GMAIL.COM", "BELGAUM", "KARNATAKA", "INDIA"),
	  ("DHANALAXMI", 27, 7827294782, "DHANALAXMI8596@GMAIL.COM", "BANGALORE", "KARNATAKA", "INDIA"),
      ("RAMAN", 26, 7382947208, "RAMAN67382@GMAIL.COM", "GADAG", "KARNATAKA", "INDIA"),
      ("REEMA", 28, 6378274768, "REMMASINGH@GMAIL.COM", "MUMBAI", "MAHARASTRA", "INDIA"),
      ("JEEVAN", 25, 7839465731, "JEEVANBIMA@GMAIL.COM", "ATHANI", "KARNATAKA", "INDIA"),
      ("TINA", 24, 7835681932, "TINAKKK@GMAIL.COM", "NEW DELHI", "DELHI", "INDIA");
      
      
-- SHOW METHODS IN MYSQL
SHOW DATABASES;                      -- SHOWS THE LIST OF DATABASES AVILABLE
SHOW SCHEMAS;                        -- SHOWS THE LIST OF SCHEMAS AVAIALABLE
SHOW TABLES;                         -- SHOWS THE LIST OF TABLES(NAMES) IN USED DATABASE
SHOW FULL TABLES;                    -- SHOWS THE LIST OF TABLES(NAME) AND TABLE TYPE IN USED DATABASE
SHOW TABLES LIKE "PERSO%";           -- SHOWS THE TABLES WHICH MATCHES WITH WILDCARD RULE CHARACTER
SHOW ERRORS;                         -- SHOWS THE ERROR OCCURED IN PREVIOUS RUN
SHOW COUNT(*) ERRORS;                -- SHOWS THE COUNT OF ERRORS OCCURED IN PREVIOUS RUN
SHOW COLUMNS FROM PERSONAL_INFO;     -- SHOWS THE TABLE INFORMATION
SHOW EVENTS;                         -- SHOWS THE EVENTS
SHOW CHARACTER SET;                  -- SHOWS CHARACTER SETS AVAILABLE IN MYSQL

-- STRING FUNCTIONS
-- 1. ASCII: USED TO EXECUTE ASCII VALUES OF CHARACTER OR NUMBER
SELECT NAME, ASCII(NAME) FROM PERSONAL_INFO;

-- 2. BINARY: SHOWS THE BINARY NUMBER OF SELECTED NUMBER
SELECT MOBILE_NUMBER, BIN(MOBILE_NUMBER) FROM PERSONAL_INFO;

-- 3. BIT_LENGTH: SHPWS THE BIT LENGTH
SELECT NAME, BIT_LENGTH(NAME) FROM PERSONAL_INFO;

-- 4. CHAR_LENGTH: COUNTS THE TOTAL CHARACTER PRESENT IN STRING INCLUDING SPACE
SELECT NAME, CHAR_LENGTH(NAME) FROM PERSONAL_INFO;

-- 5. CONCAT: USED TO CONCATE THE TWO STRINGS
SELECT CITY, STATE, COUNTRY, CONCAT(CITY,", ", STATE,", ", COUNTRY) AS ADDRESS FROM PERSONAL_INFO;

-- 6. CONCAT_WS: USED TO CONCAT THE STRING WITH DELIMETER SPECIFIED
SELECT CITY, STATE, COUNTRY, CONCAT_WS(", ", CITY, STATE, COUNTRY) AS ADDRESS FROM PERSONAL_INFO;

-- 7. FIELD: CHECK WHETHER THE SPECIFIED STRING PRESENT IN THE SELECTED STRING
SELECT NAME, CITY, STATE, COUNTRY, FIELD("KARNATAKA", STATE) AS FROM_KA FROM PERSONAL_INFO;

-- 8. FORMAT: FORMAT TO DECIMALS
SELECT AGE, FORMAT(AGE, 1) FROM PERSONAL_INFO;

-- 9. HEX, UNHEX: CONVERTS TO ITS HEXADECIMAL FORMAT
SELECT AGE, HEX(AGE) FROM PERSONAL_INFO;
SELECT NAME, HEX(NAME) FROM PERSONAL_INFO;

-- 10. INSERT: USED TO INSER SPECIFIC CHARACTER
SELECT NAME, CITY, INSERT(NAME, 4, 20, CITY) AS LOGIN_ID FROM PERSONAL_INFO;

--  11. INSTR, POSITION, LOCATE: CHECKS WHETHER A STRING HAS SPECIFIED CHARACTER/STRING
SELECT NAME, INSTR(NAME, "N") AS HAS_N FROM PERSONAL_INFO;
SELECT NAME, LOCATE("N", NAME) AS HAS_N FROM PERSONAL_INFO;
SELECT NAME, POSITION("N" IN NAME) AS HAS_N FROM PERSONAL_INFO;

-- 12. LCASE, LOWER, UCASE, UPPER: CONVERT TO LOWER/UPPER
SELECT NAME, LCASE(NAME), LOWER(NAME), UCASE(NAME), UPPER(NAME) FROM PERSONAL_INFO;
SELECT EMAIL, LCASE(EMAIL), LOWER(EMAIL), UCASE(EMAIL), UPPER(EMAIL) FROM PERSONAL_INFO;

-- 13. LEFT, RIGHT: CHECK WHAT CHARACTERS/STRING PRESENT AT ITS LEFT OR RIGHT
SELECT EMAIL, LEFT(EMAIL, 5), RIGHT(EMAIL, 3) FROM PERSONAL_INFO;

-- 14. LENGTH: LENGTH SIMILAR TO CHAR_LENGTH BUT LENGTH RETURN BIT REQUIRED TO STORE THE STRING AND CHAR_LENGTH RETURN STRING LENGTH
SELECT EMAIL, LENGTH(EMAIL), CHAR_LENGTH(EMAIL) FROM PERSONAL_INFO;
SELECT LENGTH("€"), CHAR_LENGTH("€");

-- 15. LPAD, RPAD: USED TO ADD PADING WIHT SPECIFIC CHARACTER
SELECT NAME, LPAD(NAME, 15, "-"), RPAD(NAME, 15, "-") FROM PERSONAL_INFO;

-- 16. LTRIM, RTRIM: TRIMMING/REMOVING WHITE SPACES PRESENT AT RIGHT/LEFT
SELECT "    SURAJ", LTRIM("    SURAJ") AS AFTER_LTRIM, "SURAJ     ", RTRIM("SURAJ     ") AS AFTER_RTRIM;

-- 17. SUBSTRING, MID: CHECK THE STRING PRESENT AT SPECIFIC LOCATION USING INDEX POSITIONS
SELECT EMAIL, SUBSTRING(EMAIL, 6, 10) AS SUBSTRING, MID(EMAIL, 6, 10) AS MIDSTRING FROM PERSONAL_INFO;

-- 18. QUOTE: ADDING QUOTATION MARK TO SPECIFIED STRING
SELECT MOBILE_NUMBER, QUOTE(MOBILE_NUMBER) AS IN_QUOTES FROM PERSONAL_INFO;

-- 19. REPLACE: REPLACING SPECIFIC CHARACTER OR STRING
SELECT EMAIL, REPLACE(EMAIL, "GMAIL", "YAHOO") AS NEW_EMAIL FROM PERSONAL_INFO;

-- 20. REVERSE: REVERSING THE STRING
SELECT STATE, REVERSE(STATE) AS REVERSE_STATE FROM PERSONAL_INFO;

-- 21. SPACE: JUST CONVERT ANY STRING TO SAME NUMBER/LENGTH SPACES
SELECT SPACE("SURAJ");

-- 22. SUBSTR, SUBSTRING: RETURN THE SUBSTRING AT SPECIFIED POSITION
SELECT CITY, SUBSTR(CITY, 3, 5) AS SUBSTR, SUBSTRING(CITY, 3, 5) AS SUBSTRING FROM PERSONAL_INFO;

-- 23. SUBSTRING_INDEX: USED TO SPLIT THE STRING WITH DELIMETER
SELECT EMAIL, SUBSTRING_INDEX(EMAIL, "@", 1) AS USERNAME, SUBSTRING_INDEX(EMAIL,"@",-1) AS SERVER_NAME FROM PERSONAL_INFO;


-------------------------------------------------------------------------------------------------------------------------------------------------
